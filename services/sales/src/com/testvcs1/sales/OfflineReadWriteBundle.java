/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.testvcs1.sales;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.sql.Time;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * OfflineReadWriteBundle generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`OfflineReadWriteBundle`")
public class OfflineReadWriteBundle implements Serializable {

    private Integer id;
    private String name;
    private LocalDateTime doj;
    private Timestamp timestampCol;
    private Date dateCol;
    private Time timeCol;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`name`", nullable = true, length = 255)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "`DOJ`", nullable = true)
    public LocalDateTime getDoj() {
        return this.doj;
    }

    public void setDoj(LocalDateTime doj) {
        this.doj = doj;
    }

    @Column(name = "`timestampCol`", nullable = true)
    public Timestamp getTimestampCol() {
        return this.timestampCol;
    }

    public void setTimestampCol(Timestamp timestampCol) {
        this.timestampCol = timestampCol;
    }

    @Column(name = "`DateCol`", nullable = true)
    public Date getDateCol() {
        return this.dateCol;
    }

    public void setDateCol(Date dateCol) {
        this.dateCol = dateCol;
    }

    @Column(name = "`TimeCol`", nullable = true)
    public Time getTimeCol() {
        return this.timeCol;
    }

    public void setTimeCol(Time timeCol) {
        this.timeCol = timeCol;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof OfflineReadWriteBundle)) return false;
        final OfflineReadWriteBundle offlineReadWriteBundle = (OfflineReadWriteBundle) o;
        return Objects.equals(getId(), offlineReadWriteBundle.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}